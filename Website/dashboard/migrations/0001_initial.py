# Generated by Django 4.0.2 on 2022-03-13 19:25

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('application_id', models.IntegerField(db_column='APPLICATION_ID', primary_key=True, serialize=False)),
                ('org_id', models.IntegerField(blank=True, db_column='ORG_ID', null=True)),
                ('driver_id', models.IntegerField(blank=True, db_column='DRIVER_ID', null=True)),
            ],
            options={
                'db_table': 'APPLICATION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('catalog_id', models.IntegerField(db_column='CATALOG_ID', primary_key=True, serialize=False)),
                ('items', models.CharField(blank=True, db_column='ITEMS', max_length=45, null=True)),
            ],
            options={
                'db_table': 'CATALOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('driver_id', models.IntegerField(db_column='DRIVER_ID', primary_key=True, serialize=False)),
                ('points', models.IntegerField(blank=True, db_column='POINTS', null=True)),
                ('application_id', models.IntegerField(blank=True, db_column='APPLICATION_ID', null=True)),
                ('user_id', models.IntegerField(blank=True, db_column='USER_ID', null=True)),
            ],
            options={
                'db_table': 'DRIVER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralUser',
            fields=[
                ('user_id', models.IntegerField(db_column='USER_ID', primary_key=True, serialize=False)),
                ('email', models.CharField(db_column='EMAIL', max_length=45)),
                ('password', models.CharField(db_column='PASSWORD', max_length=20)),
                ('user_type', models.IntegerField(db_column='USER_TYPE')),
            ],
            options={
                'db_table': 'GENERAL_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logins',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='DATE', null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=45, null=True)),
                ('passfail', models.IntegerField(blank=True, db_column='PASSFAIL', null=True)),
            ],
            options={
                'db_table': 'LOGINS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.IntegerField(db_column='ORDER_ID', primary_key=True, serialize=False)),
                ('item_id', models.IntegerField(blank=True, db_column='ITEM_ID', null=True)),
            ],
            options={
                'db_table': 'ORDER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrgConnections',
            fields=[
                ('connection_id', models.IntegerField(db_column='CONNECTION_ID', primary_key=True, serialize=False)),
                ('org_id', models.IntegerField(blank=True, db_column='ORG_ID', null=True)),
                ('user_id', models.IntegerField(blank=True, db_column='USER_ID', null=True)),
            ],
            options={
                'db_table': 'ORG_CONNECTIONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('sponsor_id', models.IntegerField(db_column='SPONSOR_ID', primary_key=True, serialize=False)),
                ('org_id', models.IntegerField(blank=True, db_column='ORG_ID', null=True)),
            ],
            options={
                'db_table': 'SPONSOR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SponsorOrg',
            fields=[
                ('org_id', models.IntegerField(db_column='ORG_ID', primary_key=True, serialize=False)),
                ('catalog_id', models.IntegerField(blank=True, db_column='CATALOG_ID', null=True)),
                ('org_name', models.CharField(blank=True, db_column='ORG_NAME', max_length=255, null=True)),
            ],
            options={
                'db_table': 'SPONSOR_ORG',
                'managed': False,
            },
        ),
    ]
